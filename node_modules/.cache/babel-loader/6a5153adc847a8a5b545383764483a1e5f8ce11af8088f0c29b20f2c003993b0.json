{"ast":null,"code":"// import axios from 'axios'\n\nexport default {\n  name: 'LocalImg',\n  data() {\n    return {\n      imgList: [],\n      firstRowNums: 0,\n      firstRowImgsHeight: []\n    };\n  },\n  created() {\n    const files = require.context(\"@/assets/imgs\", true, /\\.*\\.jpg/).keys();\n    this.imgList = files;\n    // var imgsWidth = imgs[0].offsetWidth\n    // console.log(imgsWidth);\n  },\n\n  mounted() {},\n  methods: {\n    handleImageLoad(index) {\n      // //获取主容器宽度\n      // var content = this.$refs.content\n      // var contentWidth = content.offsetWidth\n\n      // // img标签的dom数组\n      // var imgs = this.$refs.image\n      // var imgWidth = imgs[0].offsetWidth\n\n      // // 获取第一行的图片整数 \n      // this.firstRowNums = Math.floor(contentWidth / imgWidth)\n\n      //     const image = this.$refs.image\n      //     if (index < this.firstRowNums) { //第一行\n      //         // 获取第一行全部图片的高度 存到数组\n      //         var imgHeight = image[index].offsetHeight\n      //         this.firstRowImgsHeight.push(imgHeight)\n      //     }\n      //     else if(index > this.firstRowNums){  //第二行往后\n      //         var obj = {\n      //             minHeight: this.firstRowImgsHeight[0],   //第一行最短的高度\n      //             minIndex: 0  // 第一行高度最矮的那一项的下标\n      //         }\n      //         console.log(this.firstRowImgsHeight);\n      //         for (let j = 0; j < this.firstRowImgsHeight.length; j++) {\n      //             if (this.firstRowImgsHeight[j] < obj.minHeight) {  //找到第一行高度最小那一项\n      //                 obj.minHeight = this.firstRowImgsHeight[j]\n      //                 obj.minIndex = j\n      //             }\n      //         }\n      //         image[index].style.position = \"absolute\"\n      //         image[index].style.top = obj.minHeight + \"px\"\n      //         image[index].style.left = image[obj.minIndex].offsetLeft + \"px\"\n      //         this.firstRowImgsHeight[obj.minIndex] = this.firstRowImgsHeight[obj.minIndex] + image[index].height\n      //     }\n    }\n  }\n};","map":{"version":3,"names":["name","data","imgList","firstRowNums","firstRowImgsHeight","created","files","require","context","keys","mounted","methods","handleImageLoad","index"],"sources":["src/components/LocalImg.vue"],"sourcesContent":["<template>\r\n    <div id=\"waterfall\">\r\n\r\n        <div class=\"content\" ref=\"content\">\r\n            <!-- 遍历图片数组获取图片 -->\r\n            <div v-for=\"(item, index) in imgList\" :key=\"index\">\r\n                <img :src=\"require('../assets/imgs' + item.slice(1))\" alt=\"xxx\" ref=\"image\"\r\n                    @load=\"handleImageLoad(index)\" />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'\r\n\r\nexport default {\r\n    name: 'LocalImg',\r\n    data() {\r\n        return {\r\n            imgList: [],\r\n            firstRowNums: 0,\r\n            firstRowImgsHeight: [],\r\n            \r\n        }\r\n    },\r\n    created() {\r\n        const files = require.context(\"@/assets/imgs\", true, /\\.*\\.jpg/).keys();\r\n        this.imgList = files\r\n        // var imgsWidth = imgs[0].offsetWidth\r\n        // console.log(imgsWidth);\r\n    },\r\n    mounted() {\r\n\r\n    },\r\n    methods: {\r\n        handleImageLoad(index) {\r\n        // //获取主容器宽度\r\n        // var content = this.$refs.content\r\n        // var contentWidth = content.offsetWidth\r\n\r\n        // // img标签的dom数组\r\n        // var imgs = this.$refs.image\r\n        // var imgWidth = imgs[0].offsetWidth\r\n\r\n        // // 获取第一行的图片整数 \r\n        // this.firstRowNums = Math.floor(contentWidth / imgWidth)\r\n\r\n        //     const image = this.$refs.image\r\n        //     if (index < this.firstRowNums) { //第一行\r\n        //         // 获取第一行全部图片的高度 存到数组\r\n        //         var imgHeight = image[index].offsetHeight\r\n        //         this.firstRowImgsHeight.push(imgHeight)\r\n        //     }\r\n        //     else if(index > this.firstRowNums){  //第二行往后\r\n        //         var obj = {\r\n        //             minHeight: this.firstRowImgsHeight[0],   //第一行最短的高度\r\n        //             minIndex: 0  // 第一行高度最矮的那一项的下标\r\n        //         }\r\n        //         console.log(this.firstRowImgsHeight);\r\n        //         for (let j = 0; j < this.firstRowImgsHeight.length; j++) {\r\n        //             if (this.firstRowImgsHeight[j] < obj.minHeight) {  //找到第一行高度最小那一项\r\n        //                 obj.minHeight = this.firstRowImgsHeight[j]\r\n        //                 obj.minIndex = j\r\n        //             }\r\n        //         }\r\n        //         image[index].style.position = \"absolute\"\r\n        //         image[index].style.top = obj.minHeight + \"px\"\r\n        //         image[index].style.left = image[obj.minIndex].offsetLeft + \"px\"\r\n        //         this.firstRowImgsHeight[obj.minIndex] = this.firstRowImgsHeight[obj.minIndex] + image[index].height\r\n        //     }\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"less\">\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n#waterfall {\r\n    margin: 0 auto;\r\n}\r\n\r\n.content {\r\n    // display: flex;\r\n    // flex-wrap: wrap;\r\n    // justify-content: center;\r\n    // row-gap: 20px;\r\n    // width: 100%;\r\n    display: grid;\r\n  grid-template-columns: repeat(5, 1fr);\r\n  grid-auto-rows: minmax(100px, auto);\r\n  grid-gap: 10px;\r\n    div {\r\n//         flex: 1 0 auto;\r\n//   margin-bottom: 10px;\r\n        padding: 10px;\r\n        // height: auto;\r\n\r\n        img {\r\n            \r\n            width: 300px;\r\n            border-radius: 10px;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n</style>"],"mappings":"AAeA;;AAEA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;MACAC,YAAA;MACAC,kBAAA;IAEA;EACA;EACAC,QAAA;IACA,MAAAC,KAAA,GAAAC,OAAA,CAAAC,OAAA,oCAAAC,IAAA;IACA,KAAAP,OAAA,GAAAI,KAAA;IACA;IACA;EACA;;EACAI,QAAA,GAEA;EACAC,OAAA;IACAC,gBAAAC,KAAA;MACA;MACA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IAAA;EAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}