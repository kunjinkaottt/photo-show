{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'\n\nwindow.onload = function () {};\nexport default {\n  name: 'LocalImg',\n  data() {\n    return {\n      imgList: []\n    };\n  },\n  created() {\n    const files = require.context(\"@/assets/imgs\", true, /\\.*\\.jpg/).keys();\n    this.imgList = files;\n    // var imgsWidth = imgs[0].offsetWidth\n    // console.log(imgsWidth);\n  },\n\n  mounted() {\n    var content = document.getElementsByClassName('content')[0];\n    var contentWidth = content.offsetWidth; //获取主容器宽度\n    // img标签的dom数组\n    var imgs = content.children;\n    var imgWidth = imgs[0].offsetWidth;\n    // 获取第一行的图片整数 \n    var nums = Math.floor(contentWidth / imgWidth);\n    var firstRowImgsHeight = [];\n    setTimeout(() => {\n      for (var i = 0; i < imgs.length; i++) {\n        //imgs.length所有图片的数量\n        if (i < nums) {\n          //第一行\n          // 获取第一行全部图片的高度 存到数组\n          var imgHeight = imgs[i].offsetHeight;\n          firstRowImgsHeight.push(imgHeight);\n        } else {\n          //第二行往后\n          var obj = {\n            minHeight: firstRowImgsHeight[0],\n            //第一行最短的高度\n            minIndex: 0 // 第一行高度最矮的那一项的下标\n          };\n\n          for (let j = 0; j < firstRowImgsHeight.length; j++) {\n            if (firstRowImgsHeight[j] < obj.minHeight) {\n              //找到高度最矮那一项\n              obj.minHeight = firstRowImgsHeight[j];\n              obj.minIndex = j;\n            }\n          }\n          imgs[i].style.position = \"absolute\";\n          imgs[i].style.top = obj.minHeight + \"px\";\n          imgs[i].style.left = imgs[obj.minIndex].offsetLeft + \"px\";\n          firstRowImgsHeight[obj.minIndex] = firstRowImgsHeight[obj.minIndex] + imgs[i].offsetHeight;\n        }\n      }\n    }, 1000);\n  },\n  methods: {}\n};","map":{"version":3,"names":["window","onload","name","data","imgList","created","files","require","context","keys","mounted","content","document","getElementsByClassName","contentWidth","offsetWidth","imgs","children","imgWidth","nums","Math","floor","firstRowImgsHeight","setTimeout","i","length","imgHeight","offsetHeight","push","obj","minHeight","minIndex","j","style","position","top","left","offsetLeft","methods"],"sources":["src/components/LocalImg.vue"],"sourcesContent":["<template>\r\n    <div id=\"waterfall\">\r\n\r\n        <div class=\"content\">\r\n            <!-- 遍历图片数组获取图片 -->\r\n            <div v-for=\"(item, index) in imgList\" :key=\"index\">\r\n                <img :src=\"require('../assets/imgs' + item.slice(1))\" alt=\"xxx\" />\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'\r\n\r\n\r\n\r\nwindow.onload = function () {\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport default {\r\n    name: 'LocalImg',\r\n    data() {\r\n        return {\r\n            imgList: [],\r\n        }\r\n    },\r\n    created() {\r\n        const files = require.context(\"@/assets/imgs\", true, /\\.*\\.jpg/).keys();\r\n        this.imgList = files\r\n        // var imgsWidth = imgs[0].offsetWidth\r\n        // console.log(imgsWidth);\r\n\r\n\r\n    },\r\n    mounted() {\r\n        var content = document.getElementsByClassName('content')[0]\r\n        var contentWidth = content.offsetWidth  //获取主容器宽度\r\n        // img标签的dom数组\r\n        var imgs = content.children\r\n        var imgWidth = imgs[0].offsetWidth\r\n        // 获取第一行的图片整数 \r\n        var nums = Math.floor(contentWidth / imgWidth)\r\n\r\n        var firstRowImgsHeight = []\r\n        setTimeout(() => {\r\n            for (var i = 0; i < imgs.length; i++) {//imgs.length所有图片的数量\r\n                if (i < nums) { //第一行\r\n                    // 获取第一行全部图片的高度 存到数组\r\n                    var imgHeight = imgs[i].offsetHeight\r\n                    firstRowImgsHeight.push(imgHeight)\r\n                }\r\n                else {  //第二行往后\r\n                    var obj = {\r\n                        minHeight: firstRowImgsHeight[0],   //第一行最短的高度\r\n                        minIndex: 0  // 第一行高度最矮的那一项的下标\r\n                    }\r\n                    for (let j = 0; j < firstRowImgsHeight.length; j++) {\r\n                        if (firstRowImgsHeight[j] < obj.minHeight) {  //找到高度最矮那一项\r\n                            obj.minHeight = firstRowImgsHeight[j]\r\n                            obj.minIndex = j\r\n                        }\r\n                    }\r\n                    imgs[i].style.position = \"absolute\"\r\n                    imgs[i].style.top = obj.minHeight + \"px\"\r\n                    imgs[i].style.left = imgs[obj.minIndex].offsetLeft + \"px\"\r\n                    firstRowImgsHeight[obj.minIndex] = firstRowImgsHeight[obj.minIndex] + imgs[i].offsetHeight\r\n                }\r\n            }\r\n        }, 1000);\r\n\r\n\r\n    },\r\n    methods: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\">\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n#waterfall {\r\n    width: 84.5%;\r\n    margin: 0 auto;\r\n}\r\n\r\n.content {\r\n    width: 100%;\r\n\r\n    div {\r\n        float: left;\r\n        padding: 10px;\r\n\r\n        img {\r\n            width: 300px;\r\n            border-radius: 10px;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n</style>"],"mappings":";AAcA;;AAIAA,MAAA,CAAAC,MAAA,gBAKA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,OAAA;IACA;EACA;EACAC,QAAA;IACA,MAAAC,KAAA,GAAAC,OAAA,CAAAC,OAAA,oCAAAC,IAAA;IACA,KAAAL,OAAA,GAAAE,KAAA;IACA;IACA;EAGA;;EACAI,QAAA;IACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,sBAAA;IACA,IAAAC,YAAA,GAAAH,OAAA,CAAAI,WAAA;IACA;IACA,IAAAC,IAAA,GAAAL,OAAA,CAAAM,QAAA;IACA,IAAAC,QAAA,GAAAF,IAAA,IAAAD,WAAA;IACA;IACA,IAAAI,IAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAP,YAAA,GAAAI,QAAA;IAEA,IAAAI,kBAAA;IACAC,UAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,GAAAR,IAAA,CAAAS,MAAA,EAAAD,CAAA;QAAA;QACA,IAAAA,CAAA,GAAAL,IAAA;UAAA;UACA;UACA,IAAAO,SAAA,GAAAV,IAAA,CAAAQ,CAAA,EAAAG,YAAA;UACAL,kBAAA,CAAAM,IAAA,CAAAF,SAAA;QACA,OACA;UAAA;UACA,IAAAG,GAAA;YACAC,SAAA,EAAAR,kBAAA;YAAA;YACAS,QAAA;UACA;;UACA,SAAAC,CAAA,MAAAA,CAAA,GAAAV,kBAAA,CAAAG,MAAA,EAAAO,CAAA;YACA,IAAAV,kBAAA,CAAAU,CAAA,IAAAH,GAAA,CAAAC,SAAA;cAAA;cACAD,GAAA,CAAAC,SAAA,GAAAR,kBAAA,CAAAU,CAAA;cACAH,GAAA,CAAAE,QAAA,GAAAC,CAAA;YACA;UACA;UACAhB,IAAA,CAAAQ,CAAA,EAAAS,KAAA,CAAAC,QAAA;UACAlB,IAAA,CAAAQ,CAAA,EAAAS,KAAA,CAAAE,GAAA,GAAAN,GAAA,CAAAC,SAAA;UACAd,IAAA,CAAAQ,CAAA,EAAAS,KAAA,CAAAG,IAAA,GAAApB,IAAA,CAAAa,GAAA,CAAAE,QAAA,EAAAM,UAAA;UACAf,kBAAA,CAAAO,GAAA,CAAAE,QAAA,IAAAT,kBAAA,CAAAO,GAAA,CAAAE,QAAA,IAAAf,IAAA,CAAAQ,CAAA,EAAAG,YAAA;QACA;MACA;IACA;EAGA;EACAW,OAAA,GAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}