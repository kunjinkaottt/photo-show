{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import axios from 'axios'\n\nexport default {\n  name: 'Localimg',\n  data() {\n    return {\n      imgArr: []\n    };\n  },\n  created() {\n    let randomWidth = '';\n    let randomHeight = '';\n    let imgApi = '';\n    for (let i = 0; i < 15; i++) {\n      randomWidth = Math.floor(Math.random() * 500) + 240; //随机宽度\n      randomHeight = Math.floor(Math.random() * 500) + 240; //随机高度\n      imgApi = 'https://picsum.photos/' + randomWidth + '/' + randomHeight + '?random=' + i; //随机图api\n      // 把请求 随机图api得到的图片url放到数组里\n      axios.get(imgApi).then(response => {\n        this.imgArr.push(response.request.responseURL);\n      });\n      // 计算并保存图片在页面中的高度 ,用于下一排自动补充到上一排高度最小的图片下面\n      // this.imgHeightArr.push(Math.round(240 * this.randomHeight / this.randomWidth))\n    }\n\n    var content = document.getElementsByClassName(\"content\")[0];\n    var contentWidth = content.offsetWidth; //获取主容器的宽度\n    console.log(contentWidth);\n    var imgs = [];\n    imgs = content.children;\n    console.log(imgs[0]); //多这个缓冲，可以得到imgs第一个元素的offsetWidth\n    var imgWidth = imgs[0].offsetWidth;\n    console.log(imgWidth);\n    var nums = Math.floor(contentWidth / imgWidth);\n    console.log(nums);\n\n    // 收集第一排所有高度\n    var arrHeight = [];\n    for (let i = 0; i < imgs.length; i++) {\n      if (i < nums) {\n        //第一行\n        arrHeight.push(imgs[i].offsetWidth); //问题在于图片获取太慢\n      }\n\n      console.log(arrHeight);\n    }\n\n    // \n  },\n\n  methods: {}\n};","map":{"version":3,"names":["name","data","imgArr","created","randomWidth","randomHeight","imgApi","i","Math","floor","random","axios","get","then","response","push","request","responseURL","content","document","getElementsByClassName","contentWidth","offsetWidth","console","log","imgs","children","imgWidth","nums","arrHeight","length","methods"],"sources":["src/components/LocalImg.vue"],"sourcesContent":["<template>\r\n    <div id=\"waterfall\">\r\n\r\n        <div class=\"content\">\r\n            <!-- 遍历图片数组获取图片 -->\r\n            <div >\r\n               <img src=\"../assets/imgs/2 sheets   Sea and boat-1.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/3 hours concept art demo.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/Camp.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/Architectural design demo.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/china xianxia.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/game design  japan demo.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/design demo-1.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/Game scene design.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/4 hours illustration demo.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/TEN YAN CITY.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/Huizhou architecture  demo.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/Cyberpunk Oriental bar.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/Ao Zeya style architectural design.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/City of the sky.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/design demo-3.jpg\" alt=\"\">\r\n            </div>\r\n            <div >\r\n               <img src=\"../assets/imgs/expedition forces.jpg\" alt=\"\">\r\n            </div>\r\n\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n// import axios from 'axios'\r\n\r\n\r\n\r\nexport default {\r\n    name: 'Localimg',\r\n    data() {\r\n        return {\r\n            imgArr: []\r\n        }\r\n    },\r\n    created() {\r\n        let randomWidth = ''\r\n        let randomHeight = ''\r\n        let imgApi = ''\r\n        for (let i = 0; i < 15; i++) {\r\n            randomWidth = Math.floor(Math.random() * 500) + 240  //随机宽度\r\n            randomHeight = Math.floor(Math.random() * 500) + 240 //随机高度\r\n            imgApi = 'https://picsum.photos/' + randomWidth + '/' + randomHeight + '?random=' + i //随机图api\r\n            // 把请求 随机图api得到的图片url放到数组里\r\n            axios.get(imgApi).then(response => {\r\n                this.imgArr.push(response.request.responseURL)\r\n            })\r\n            // 计算并保存图片在页面中的高度 ,用于下一排自动补充到上一排高度最小的图片下面\r\n            // this.imgHeightArr.push(Math.round(240 * this.randomHeight / this.randomWidth))\r\n        }\r\n        var content = document.getElementsByClassName(\"content\")[0]\r\n        var contentWidth = content.offsetWidth  //获取主容器的宽度\r\n        console.log(contentWidth);  \r\n        var imgs = []\r\n        imgs =  content.children\r\n        console.log(imgs[0]);   //多这个缓冲，可以得到imgs第一个元素的offsetWidth\r\n        var imgWidth = imgs[0].offsetWidth\r\n        console.log(imgWidth);\r\n        \r\n        var nums = Math.floor(contentWidth / imgWidth)\r\n        console.log(nums);\r\n\r\n        // 收集第一排所有高度\r\n        var arrHeight = []\r\n        for (let i = 0; i < imgs.length; i++) {\r\n            if(i<nums){ //第一行\r\n                arrHeight.push(imgs[i].offsetWidth) //问题在于图片获取太慢\r\n            }\r\n            console.log(arrHeight);\r\n        }\r\n\r\n        // \r\n\r\n    },\r\n    methods: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\">\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.content {\r\n    width: 100%;\r\n    height: 2000px;\r\n\r\n    div {\r\n        float: left;\r\n        border: 1px solid black;\r\n        padding: 10px;\r\n\r\n        img {\r\n            width: 200px;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n</style>"],"mappings":";AA4DA;;AAIA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,IAAAC,WAAA;IACA,IAAAC,YAAA;IACA,IAAAC,MAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,OAAAA,CAAA;MACAH,WAAA,GAAAI,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;MACAL,YAAA,GAAAG,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;MACAJ,MAAA,8BAAAF,WAAA,SAAAC,YAAA,gBAAAE,CAAA;MACA;MACAI,KAAA,CAAAC,GAAA,CAAAN,MAAA,EAAAO,IAAA,CAAAC,QAAA;QACA,KAAAZ,MAAA,CAAAa,IAAA,CAAAD,QAAA,CAAAE,OAAA,CAAAC,WAAA;MACA;MACA;MACA;IACA;;IACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,sBAAA;IACA,IAAAC,YAAA,GAAAH,OAAA,CAAAI,WAAA;IACAC,OAAA,CAAAC,GAAA,CAAAH,YAAA;IACA,IAAAI,IAAA;IACAA,IAAA,GAAAP,OAAA,CAAAQ,QAAA;IACAH,OAAA,CAAAC,GAAA,CAAAC,IAAA;IACA,IAAAE,QAAA,GAAAF,IAAA,IAAAH,WAAA;IACAC,OAAA,CAAAC,GAAA,CAAAG,QAAA;IAEA,IAAAC,IAAA,GAAApB,IAAA,CAAAC,KAAA,CAAAY,YAAA,GAAAM,QAAA;IACAJ,OAAA,CAAAC,GAAA,CAAAI,IAAA;;IAEA;IACA,IAAAC,SAAA;IACA,SAAAtB,CAAA,MAAAA,CAAA,GAAAkB,IAAA,CAAAK,MAAA,EAAAvB,CAAA;MACA,IAAAA,CAAA,GAAAqB,IAAA;QAAA;QACAC,SAAA,CAAAd,IAAA,CAAAU,IAAA,CAAAlB,CAAA,EAAAe,WAAA;MACA;;MACAC,OAAA,CAAAC,GAAA,CAAAK,SAAA;IACA;;IAEA;EAEA;;EACAE,OAAA,GAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}