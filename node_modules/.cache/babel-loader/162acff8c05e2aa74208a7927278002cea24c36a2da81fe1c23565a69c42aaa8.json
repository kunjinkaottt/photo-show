{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// 导入axios 先提前访问随机图api获取图片的url，让图片在页面挂载时更快渲染\nimport axios from 'axios';\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      topInput: '',\n      imgArr: [],\n      imgApi: '',\n      url: 'https://picsum.photos/',\n      //另一个随即图api： https://source.unsplash.com/random\n      imgNum: 10,\n      randomWidth: 240,\n      randomHeight: 300,\n      arrHeight: [],\n      //收集第一排的所有高度\n      imgWidthArr: [],\n      imgHeightArr: []\n    };\n  },\n  props: {\n    msg: String\n  },\n  watch: {},\n  methods: {\n    randomImage() {\n      //通过api生成随机图片的url\n      for (let i = 0; i < this.imgNum; i++) {\n        this.randomWidth = Math.floor(Math.random() * 500) + 240; //随机宽度\n        this.randomHeight = Math.floor(Math.random() * 500) + 240; //随机高度\n        this.imgApi = this.url + this.randomWidth + '/' + this.randomHeight + '?random=' + i; //随机图api\n        // 把请求 随机图api得到的图片url放到数组里\n        axios.get(this.imgApi).then(response => {\n          this.imgArr.push(response.request.responseURL);\n        });\n        // 计算并保存图片在页面中的高度 ,用于下一排自动补充到上一排高度最小的图片下面\n        this.imgHeightArr.push(Math.round(240 * this.randomHeight / this.randomWidth));\n      }\n      console.log(this.imgHeightArr);\n    }\n  },\n  created() {\n    this.randomImage();\n  },\n  mounted() {\n    // 获取主容器的宽度\n    var content = document.getElementsByClassName(\"content\")[0];\n    var contentWidth = content.offsetWidth;\n    var nums = Math.floor(contentWidth / 240); //得到一行有几张图\n    console.log(nums);\n  }\n};","map":{"version":3,"names":["axios","name","data","topInput","imgArr","imgApi","url","imgNum","randomWidth","randomHeight","arrHeight","imgWidthArr","imgHeightArr","props","msg","String","watch","methods","randomImage","i","Math","floor","random","get","then","response","push","request","responseURL","round","console","log","created","mounted","content","document","getElementsByClassName","contentWidth","offsetWidth","nums"],"sources":["src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"\">\n    <el-container>\n      <el-header>\n        <div class=\"banner\">\n          <div class=\"topleft\">首页 | 发现 | 其他</div>\n          <div class=\"topmeddle\">\n            <el-input v-model=\"topInput\" prefix-icon=\"el-icon-search\" clearable placeholder=\"搜索\"\n              class=\"topinput\"></el-input>\n          </div>\n          <div class=\"topright\"> <el-button class=\"topbutton\" type=\"primary\" round>登陆/注册</el-button></div>\n        </div>\n      </el-header>\n\n      <el-main>\n        <div class=\"content\">\n\n          <div v-for=\"(item, index) in imgArr\" :key=\"index\">\n            <img class=\"randomImg\" :src=\"item\" alt=\"图片api可能过期了\"/>\n            <!-- <img src=\"../assets/logo.png\" alt=\"\"> -->\n          </div>\n          <!--懒加载图片 -->\n          <!-- <div v-for=\"(number, index) in imgNum\" :key=\"index\">\n            <img :src=\"number\" alt=\"图片api可能过期了\">\n          </div>  -->\n\n        </div>\n      </el-main>\n\n      <!-- <el-footer>Footer</el-footer> -->\n    </el-container>\n  </div>\n</template>\n\n<script>\n// 导入axios 先提前访问随机图api获取图片的url，让图片在页面挂载时更快渲染\nimport axios from 'axios'\n\nexport default {\n  name: 'HelloWorld',\n  data() {\n    return {\n      topInput: '',\n      imgArr: [],\n      imgApi: '',\n      url: 'https://picsum.photos/',//另一个随即图api： https://source.unsplash.com/random\n      imgNum: 10,\n      randomWidth: 240,\n      randomHeight: 300,\n      arrHeight:[],//收集第一排的所有高度\n      imgWidthArr:[],\n      imgHeightArr:[],\n\n    }\n  },\n  props: {\n    msg: String\n  },\n  watch:{\n    \n  },\n  methods: {\n    randomImage() { //通过api生成随机图片的url\n      for (let i = 0; i < this.imgNum; i++) { \n        this.randomWidth = Math.floor(Math.random() * 500) + 240  //随机宽度\n        this.randomHeight = Math.floor(Math.random() * 500) + 240 //随机高度\n        this.imgApi = this.url + this.randomWidth + '/' + this.randomHeight + '?random=' + i //随机图api\n        // 把请求 随机图api得到的图片url放到数组里\n        axios.get(this.imgApi).then(response => {\n          this.imgArr.push(response.request.responseURL)\n        })\n        // 计算并保存图片在页面中的高度 ,用于下一排自动补充到上一排高度最小的图片下面\n        this.imgHeightArr.push(Math.round(240*this.randomHeight/this.randomWidth))\n      }\n      console.log(this.imgHeightArr);\n    },\n  },\n  created() {\n    this.randomImage()\n  },\n  mounted(){\n    // 获取主容器的宽度\n    var content = document.getElementsByClassName(\"content\")[0]\n    var contentWidth = content.offsetWidth\n    var nums = Math.floor(contentWidth/240) //得到一行有几张图\n    console.log(nums);\n\n\n\n  },\n}\n</script>\n\n<style lang=\"less\">\n* {\n  margin: 0;\n  padding: 0;\n}\n\n.el-container { \n  position: relative;\n  height: 100%;\n}\n\n.el-header {\n  text-align: center;\n  line-height: 60px;\n  background-color: #b3aeac;\n}\n\n.banner {\n  display: flex;\n}\n\n.topleft {\n  flex: 2;\n}\n\n.topmeddle {\n  flex: 6;\n  margin: 0 5px;\n}\n\n.topright {\n  flex: 2;\n\n  .topbutton {}\n}\n\n\n.el-main {\n  padding-bottom: 100px;\n\n}\n\n.content {\n  width: 85%;\n  margin: 0 auto;\n\n  div {\n    float: left;\n    padding: 11px;\n\n    img {\n      border-radius: 15px;\n      // 图片在页面中的宽度写死为240px\n      width: 240px;\n    }\n  }\n}\n\n.el-footer {\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  height: 100px;\n  background-color: #555;\n}\n</style>\n"],"mappings":";AAmCA;AACA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,QAAA;MACAC,MAAA;MACAC,MAAA;MACAC,GAAA;MAAA;MACAC,MAAA;MACAC,WAAA;MACAC,YAAA;MACAC,SAAA;MAAA;MACAC,WAAA;MACAC,YAAA;IAEA;EACA;EACAC,KAAA;IACAC,GAAA,EAAAC;EACA;EACAC,KAAA,GAEA;EACAC,OAAA;IACAC,YAAA;MAAA;MACA,SAAAC,CAAA,MAAAA,CAAA,QAAAZ,MAAA,EAAAY,CAAA;QACA,KAAAX,WAAA,GAAAY,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;QACA,KAAAb,YAAA,GAAAW,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;QACA,KAAAjB,MAAA,QAAAC,GAAA,QAAAE,WAAA,cAAAC,YAAA,gBAAAU,CAAA;QACA;QACAnB,KAAA,CAAAuB,GAAA,MAAAlB,MAAA,EAAAmB,IAAA,CAAAC,QAAA;UACA,KAAArB,MAAA,CAAAsB,IAAA,CAAAD,QAAA,CAAAE,OAAA,CAAAC,WAAA;QACA;QACA;QACA,KAAAhB,YAAA,CAAAc,IAAA,CAAAN,IAAA,CAAAS,KAAA,YAAApB,YAAA,QAAAD,WAAA;MACA;MACAsB,OAAA,CAAAC,GAAA,MAAAnB,YAAA;IACA;EACA;EACAoB,QAAA;IACA,KAAAd,WAAA;EACA;EACAe,QAAA;IACA;IACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,sBAAA;IACA,IAAAC,YAAA,GAAAH,OAAA,CAAAI,WAAA;IACA,IAAAC,IAAA,GAAAnB,IAAA,CAAAC,KAAA,CAAAgB,YAAA;IACAP,OAAA,CAAAC,GAAA,CAAAQ,IAAA;EAIA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}