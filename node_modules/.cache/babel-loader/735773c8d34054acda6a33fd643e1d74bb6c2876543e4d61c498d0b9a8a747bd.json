{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nwindow.onload = function () {};\nexport default {\n  name: 'WaterFall',\n  data() {\n    return {\n      imgArr: []\n    };\n  },\n  created() {\n    let randomWidth = '';\n    let randomHeight = '';\n    let imgApi = '';\n    for (let i = 0; i < 15; i++) {\n      randomWidth = Math.floor(Math.random() * 500) + 240; //随机宽度\n      randomHeight = Math.floor(Math.random() * 500) + 240; //随机高度\n      imgApi = 'https://picsum.photos/' + randomWidth + '/' + randomHeight + '?random=' + i; //随机图api\n      // 把请求 随机图api得到的图片url放到数组里\n      axios.get(imgApi).then(response => {\n        this.imgArr.push(response.request.responseURL);\n      });\n      // 计算并保存图片在页面中的高度 ,用于下一排自动补充到上一排高度最小的图片下面\n      // this.imgHeightArr.push(Math.round(240 * this.randomHeight / this.randomWidth))\n    }\n\n    var content = document.getElementsByClassName(\"content\")[0];\n    var contentWidth = content.offsetWidth; //获取主容器的宽度\n    console.log(contentWidth);\n    var imgs = [];\n    imgs = content.children;\n    console.log(imgs[0]); //多这个缓冲，可以得到imgs第一个元素的offsetWidth\n    var imgWidth = imgs[0].offsetWidth;\n    console.log(imgWidth);\n\n    // var nums = Math.floor(contentWidth / imgWidth)\n    // console.log(nums);\n  },\n\n  methods: {}\n};","map":{"version":3,"names":["axios","window","onload","name","data","imgArr","created","randomWidth","randomHeight","imgApi","i","Math","floor","random","get","then","response","push","request","responseURL","content","document","getElementsByClassName","contentWidth","offsetWidth","console","log","imgs","children","imgWidth","methods"],"sources":["src/components/WaterFall.vue"],"sourcesContent":["<template>\r\n    <div id=\"waterfall\">\r\n\r\n        <div class=\"content\">\r\n            <!-- 遍历图片数组获取图片 -->\r\n            <div v-for=\"(item, index) in imgArr\" :key=\"index\">\r\n                <img :src=\"item\" alt=\"图片api可能过期了\" />\r\n                <!-- <img src=\"../assets/logo.png\" alt=\"\"> -->\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios'\r\n\r\nwindow.onload = function () {\r\n\r\n\r\n}\r\n\r\n\r\nexport default {\r\n    name: 'WaterFall',\r\n    data() {\r\n        return {\r\n            imgArr: []\r\n        }\r\n    },\r\n    created() {\r\n        let randomWidth = ''\r\n        let randomHeight = ''\r\n        let imgApi = ''\r\n        for (let i = 0; i < 15; i++) {\r\n            randomWidth = Math.floor(Math.random() * 500) + 240  //随机宽度\r\n            randomHeight = Math.floor(Math.random() * 500) + 240 //随机高度\r\n            imgApi = 'https://picsum.photos/' + randomWidth + '/' + randomHeight + '?random=' + i //随机图api\r\n            // 把请求 随机图api得到的图片url放到数组里\r\n            axios.get(imgApi).then(response => {\r\n                this.imgArr.push(response.request.responseURL)\r\n            })\r\n            // 计算并保存图片在页面中的高度 ,用于下一排自动补充到上一排高度最小的图片下面\r\n            // this.imgHeightArr.push(Math.round(240 * this.randomHeight / this.randomWidth))\r\n        }\r\n        var content = document.getElementsByClassName(\"content\")[0]\r\n        var contentWidth = content.offsetWidth  //获取主容器的宽度\r\n        console.log(contentWidth);  \r\n        var imgs = []\r\n        imgs =  content.children\r\n        console.log(imgs[0]);   //多这个缓冲，可以得到imgs第一个元素的offsetWidth\r\n        var imgWidth = imgs[0].offsetWidth\r\n        console.log(imgWidth);\r\n        \r\n        // var nums = Math.floor(contentWidth / imgWidth)\r\n        // console.log(nums);\r\n\r\n    },\r\n    methods: {\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"less\">\r\n* {\r\n    margin: 0;\r\n    padding: 0;\r\n}\r\n\r\n.content {\r\n    width: 100%;\r\n    height: 2000px;\r\n\r\n    div {\r\n        float: left;\r\n        border: 1px solid black;\r\n        padding: 10px;\r\n\r\n        img {\r\n            width: 200px;\r\n\r\n        }\r\n    }\r\n\r\n}\r\n</style>"],"mappings":";AAeA,OAAAA,KAAA;AAEAC,MAAA,CAAAC,MAAA,gBAGA;AAGA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACAC,QAAA;IACA,IAAAC,WAAA;IACA,IAAAC,YAAA;IACA,IAAAC,MAAA;IACA,SAAAC,CAAA,MAAAA,CAAA,OAAAA,CAAA;MACAH,WAAA,GAAAI,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;MACAL,YAAA,GAAAG,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAE,MAAA;MACAJ,MAAA,8BAAAF,WAAA,SAAAC,YAAA,gBAAAE,CAAA;MACA;MACAV,KAAA,CAAAc,GAAA,CAAAL,MAAA,EAAAM,IAAA,CAAAC,QAAA;QACA,KAAAX,MAAA,CAAAY,IAAA,CAAAD,QAAA,CAAAE,OAAA,CAAAC,WAAA;MACA;MACA;MACA;IACA;;IACA,IAAAC,OAAA,GAAAC,QAAA,CAAAC,sBAAA;IACA,IAAAC,YAAA,GAAAH,OAAA,CAAAI,WAAA;IACAC,OAAA,CAAAC,GAAA,CAAAH,YAAA;IACA,IAAAI,IAAA;IACAA,IAAA,GAAAP,OAAA,CAAAQ,QAAA;IACAH,OAAA,CAAAC,GAAA,CAAAC,IAAA;IACA,IAAAE,QAAA,GAAAF,IAAA,IAAAH,WAAA;IACAC,OAAA,CAAAC,GAAA,CAAAG,QAAA;;IAEA;IACA;EAEA;;EACAC,OAAA,GAEA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}